{"ts":1360803910705,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360803925725,"patch":[[{"diffs":[[1,"// Fake user database\r\n\r\nvar users = [\r\n  { name: 'TJ', email: 'tj@vision-media.ca' },\r\n  { name: 'Tobi', email: 'tobi@vision-media.ca' }\r\n];\r\n\r\nexports.list = function(req, res){\r\n  res.render('users', { title: 'Users', users: users });\r\n};\r\n\r\nexports.load = function(req, res, next){\r\n  var id = req.params.id;\r\n  req.user = users[id];\r\n  if (req.user) {\r\n    next();\r\n  } else {\r\n    next(new Error('cannot find user ' + id));\r\n  }\r\n};\r\n\r\nexports.view = function(req, res){\r\n  res.render('users/view', {\r\n    title: 'Viewing user ' + req.user.name,\r\n    user: req.user\r\n  });\r\n};\r\n\r\nexports.edit = function(req, res){\r\n  res.render('users/edit', {\r\n    title: 'Editing user ' + req.user.name,\r\n    user: req.user\r\n  });\r\n};\r\n\r\nexports.update = function(req, res){\r\n  // Normally you would handle all kinds of\r\n  // validation and save back to the db\r\n  var user = req.body.user;\r\n  req.user.name = user.name;\r\n  req.user.email = user.email;\r\n  res.redirect('back');\r\n};"]],"start1":0,"start2":0,"length1":0,"length2":972}]],"length":972,"saved":false}
