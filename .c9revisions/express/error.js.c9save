{"ts":1360742945998,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360743031803,"patch":[[{"diffs":[[1,"var express = require('express')\r\n  , app = module.exports = express()\r\n  , test = app.get('env') == 'test';\r\n\r\nif (!test) app.use(express.logger('dev'));\r\napp.use(app.router);\r\n\r\n// the error handler is strategically\r\n// placed *below* the app.router; if it\r\n// were above it would not receive errors\r\n// from app.get() etc \r\napp.use(error);\r\n\r\n// error handling middleware have an arity of 4\r\n// instead of the typical (req, res, next),\r\n// otherwise they behave exactly like regular\r\n// middleware, you may have several of them,\r\n// in different orders etc.\r\n\r\nfunction error(err, req, res, next) {\r\n  // log it\r\n  if (!test) console.error(err.stack);\r\n\r\n  // respond with 500 \"Internal Server Error\".\r\n  res.send(500);\r\n}\r\n\r\napp.get('/', function(req, res){\r\n  // Caught and passed down to the errorHandler middleware\r\n  throw new Error('something broke!');\r\n});\r\n\r\napp.get('/next', function(req, res, next){\r\n  // We can also pass exceptions to next()\r\n  process.nextTick(function(){\r\n    next(new Error('oh no!'));\r\n  });\r\n});\r\n\r\nif (!module.parent) {\r\n  app.listen(3000);\r\n  console.log('Express started on port 3000');\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1129}]],"length":1129,"saved":false}
{"ts":1360743040266,"patch":[[{"diffs":[[0,".listen("],[-1,"3000"],[1,"process.env.PORT"],[0,");\r\n  co"]],"start1":1064,"start2":1064,"length1":20,"length2":32}]],"length":1141,"saved":false}
{"ts":1360743312719,"patch":[[{"diffs":[[0,"500);\r\n}\r\n\r\n"],[1,"app.get('/404', function(req, res){\r\n  throw new NotFound;\r\n});\r\n\r\napp.get('/500', function(req, res){\r\n  throw new Error('keyboard cat!');\r\n});\r\n\r\n\r\n"],[0,"app.get('/',"]],"start1":717,"start2":717,"length1":24,"length2":174}]],"length":1291,"saved":false}
{"ts":1360743321218,"patch":[[{"diffs":[[0,"500);\r\n}\r\n\r\n"],[1,"function NotFound(msg){\r\n  this.name = 'NotFound';\r\n  Error.call(this, msg);\r\n  Error.captureStackTrace(this, arguments.callee);\r\n}\r\n\r\nNotFound.prototype.__proto__ = Error.prototype;\r\n\r\n"],[0,"app.get('/40"]],"start1":717,"start2":717,"length1":24,"length2":210}]],"length":1477,"saved":false}
