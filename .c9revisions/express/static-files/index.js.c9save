{"ts":1360825486453,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360825565270,"patch":[[{"diffs":[[1,"\r\nvar express = require('express');\r\nvar app = express();\r\n\r\n// log requests\r\napp.use(express.logger('dev'));\r\n\r\n// express on its own has no notion\r\n// of a \"file\". The express.static()\r\n// middleware checks for a file matching\r\n// the `req.path` within the directory\r\n// that you pass it. In this case \"GET /js/app.js\"\r\n// will look for \"./public/js/app.js\".\r\n\r\napp.use(express.static(__dirname + '/public'));\r\n\r\n// if you wanted to \"prefix\" you may use\r\n// the mounting feature of Connect, for example\r\n// \"GET /static/js/app.js\" instead of \"GET /js/app.js\".\r\n// The mount-path \"/static\" is simply removed before\r\n// passing control to the express.static() middleware,\r\n// thus it serves the file correctly by ignoring \"/static\"\r\napp.use('/static', express.static(__dirname + '/public'));\r\n\r\n// if for some reason you want to serve files from\r\n// several directories, you can use express.static()\r\n// multiple times! Here we're passing \"./public/css\",\r\n// this will allow \"GET /style.css\" instead of \"GET /css/style.css\":\r\napp.use(express.static(__dirname + '/public/css'));\r\n\r\n// this examples does not have any routes, however\r\n// you may `app.use(app.router)` before or after these\r\n// static() middleware. If placed before them your routes\r\n// will be matched BEFORE file serving takes place. If placed\r\n// after as shown here then file serving is performed BEFORE\r\n// any routes are hit:\r\napp.use(app.router);\r\n\r\napp.listen(process.env.PORT); \r\n"]],"start1":0,"start2":0,"length1":0,"length2":1453}]],"length":1453,"saved":false}
