{"ts":1360737396740,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360737446842,"patch":[[{"diffs":[[1,"var express = require('express')\r\n  , app = express.createServer();\r\n\r\nvar users = [{ name: 'tj' }];\r\n\r\napp.all('/user/:id/:op?', function(req, res, next){\r\n  req.user = users[req.params.id];\r\n  if (req.user) {\r\n    next();\r\n  } else {\r\n    next(new Error('cannot find user ' + req.params.id));\r\n  }\r\n});\r\n\r\napp.get('/user/:id', function(req, res){\r\n  res.send('viewing ' + req.user.name);\r\n});\r\n\r\napp.get('/user/:id/edit', function(req, res){\r\n  res.send('editing ' + req.user.name);\r\n});\r\n\r\napp.put('/user/:id', function(req, res){\r\n  res.send('updating ' + req.user.name);\r\n});\r\n\r\napp.get('*', function(req, res){\r\n  res.send('what???', 404);\r\n});\r\n\r\napp.listen(3000); "]],"start1":0,"start2":0,"length1":0,"length2":672}]],"length":672,"saved":false}
{"ts":1360737455047,"patch":[[{"diffs":[[0,"ten("],[-1,"3000"],[1,"process.env.PORT"],[0,"); "]],"start1":661,"start2":661,"length1":11,"length2":23}]],"length":684,"saved":false}
{"ts":1360737712497,"patch":[[{"diffs":[[0,"ver();\r\n"],[1,"/*\r\napp.all()은 한 번 호출하여 같은 로직의 모든 HTTP 동사에 적용하는데 도움을 줍니다. \r\n다음 예제는 가상의 데이터베이스에서 사용자를 읽고 그것을 req.user에 할당할 것입니다.\r\n*/\r\n\r\n"],[0,"\r\nvar us"]],"start1":61,"start2":61,"length1":16,"length2":135}]],"length":803,"saved":false}
{"ts":1360737742627,"patch":[[{"diffs":[[0,"할 것입니다.\r"],[1,"\n\r\n/user/0\r"],[0,"\n*/\r\n\r\n\r"]],"start1":173,"start2":173,"length1":16,"length2":27}]],"length":814,"saved":false}
{"ts":1360737752393,"patch":[[{"diffs":[[0,"입니다.\r\n\r\n"],[1,"도메인"],[0,"/user/0\r"]],"start1":176,"start2":176,"length1":16,"length2":19}]],"length":817,"saved":false}
