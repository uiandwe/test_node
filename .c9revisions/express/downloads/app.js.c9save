{"ts":1360820489113,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360820538696,"patch":[[{"diffs":[[1,"/**\r\n * Module dependencies.\r\n */\r\n\r\nvar express = require('../../')\r\n  , app = module.exports = express();\r\n\r\napp.get('/', function(req, res){\r\n  res.send('<ul>'\r\n    + '<li>Download <a href=\"/files/amazing.txt\">amazing.txt</a>.</li>'\r\n    + '<li>Download <a href=\"/files/missing.txt\">missing.txt</a>.</li>'\r\n    + '</ul>');\r\n});\r\n\r\n// /files/* is accessed via req.params[0]\r\n// but here we name it :file\r\napp.get('/files/:file(*)', function(req, res, next){\r\n  var file = req.params.file\r\n    , path = __dirname + '/files/' + file;\r\n\r\n  res.download(path);\r\n});\r\n\r\n// error handling middleware. Because it's\r\n// below our routes, you will be able to\r\n// \"intercept\" errors, otherwise Connect\r\n// will respond with 500 \"Internal Server Error\".\r\napp.use(function(err, req, res, next){\r\n  // special-case 404s,\r\n  // remember you could\r\n  // render a 404 template here\r\n  if (404 == err.status) {\r\n    res.statusCode = 404;\r\n    res.send('Cant find that file, sorry!');\r\n  } else {\r\n    next(err);\r\n  }\r\n});\r\n\r\nif (!module.parent) {\r\n  app.listen(3000);\r\n  console.log('Express started on port 3000');\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1103}]],"length":1103,"saved":false}
{"ts":1360820574744,"patch":[[{"diffs":[[0,"re('"],[-1,"../../"],[1,"express"],[0,"')\r\n"]],"start1":56,"start2":56,"length1":14,"length2":15}]],"length":1104,"saved":false}
{"ts":1360820584645,"patch":[[{"diffs":[[0,".listen("],[-1,"3000"],[1,"process.env.PORT"],[0,");\r\n  co"]],"start1":1039,"start2":1039,"length1":20,"length2":32}]],"length":1116,"saved":false}
