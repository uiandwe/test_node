{"ts":1360822958328,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360823019180,"patch":[[{"diffs":[[1,"var express = require('express')\r\n  , app = express();\r\n\r\napp.set('view engine', 'jade');\r\napp.set('views', __dirname + '/views');\r\n\r\nfunction User(name) {\r\n  this.private = 'heyyyy';\r\n  this.secret = 'something';\r\n  this.name = name;\r\n  this.id = 123;\r\n}\r\n\r\n// You'll probably want to do\r\n// something like this so you\r\n// dont expose \"secret\" data.\r\n\r\nUser.prototype.toJSON = function(){\r\n  return {\r\n    id: this.id,\r\n    name: this.name\r\n  }\r\n};\r\n\r\napp.use(express.logger('dev'));\r\n\r\n// earlier on expose an object\r\n// that we can tack properties on.\r\n// all res.locals props are exposed\r\n// to the templates, so \"expose\" will\r\n// be present.\r\n\r\napp.use(function(req, res, next){\r\n  res.locals.expose = {};\r\n  // you could alias this as req or res.expose\r\n  // to make it shorter and less annoying\r\n  next();\r\n});\r\n\r\n// pretend we loaded a user\r\n\r\napp.use(function(req, res, next){\r\n  req.user = new User('Tobi');\r\n  next();\r\n});\r\n\r\napp.get('/', function(req, res){\r\n  res.redirect('/user');\r\n});\r\n\r\napp.get('/user', function(req, res){\r\n  // we only want to expose the user\r\n  // to the client for this route:\r\n  res.locals.expose.user = req.user;\r\n  res.render('page');\r\n});\r\n\r\napp.listen(process.env.PORT); \r\nconsole.log('app listening on port 3000');"]],"start1":0,"start2":0,"length1":0,"length2":1258}]],"length":1258,"saved":false}
{"ts":1360823224126,"patch":[[{"diffs":[[0,"his.name"],[1,",\r\n    secret: this.secret,\r\n    private: this.private"],[0,"\r\n  }\r\n}"]],"start1":432,"start2":432,"length1":16,"length2":70}]],"length":1312,"saved":false}
