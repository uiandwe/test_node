{"ts":1360218461576,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360218474884,"patch":[[{"diffs":[[1,"var dnode = require('dnode');\r\n\r\nvar server = dnode({\r\n    mul : function (n, m, cb) { cb(n * m) }\r\n});\r\nserver.listen(5050);"]],"start1":0,"start2":0,"length1":0,"length2":125}]],"length":125,"saved":false}
{"ts":1360218490614,"patch":[[{"diffs":[[0,"ten("],[-1,"5050"],[1,"process.env.PORT"],[0,");"]],"start1":115,"start2":115,"length1":10,"length2":22}]],"length":137,"saved":false}
{"ts":1360218766173,"patch":[[{"diffs":[[0,"var "],[-1,"dnode"],[1,"Connect"],[0," = requi"]],"start1":0,"start2":0,"length1":17,"length2":19},{"diffs":[[0,"re('"],[-1,"dnode"],[1,"connect"],[0,"');\r\n"],[1," "],[0,"\r\n"],[-1,"var server = dnode({\r\n    mul : function (n, m, cb) { cb(n * m) }\r\n});\r\nserver.listen(process.env.PORT"],[1,"Connect.createServer(function (req, res, next) {\r\n  // Every request gets the same \"Hello Connect\" response.\r\n  res.simpleBody(200, \"Hello Connect\");\r\n}).listen(8080"],[0,");"]],"start1":19,"start2":19,"length1":120,"length2":186}]],"length":205,"saved":false}
{"ts":1360218773817,"patch":[[{"diffs":[[0,"ten("],[-1,"8080"],[1,"rocess.env.PORT"],[0,");"]],"start1":195,"start2":195,"length1":10,"length2":21}]],"length":216,"saved":false}
{"ts":1360218821244,"patch":[[{"diffs":[[0,".listen("],[1,"p"],[0,"rocess.e"]],"start1":191,"start2":191,"length1":16,"length2":17}]],"length":217,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360220251730,"patch":[[{"diffs":[[0,"var "],[-1,"Connect = require('connect');\r\n \r\nConnect.createServer(function (req, res, next"],[1,"sys = require('util'),\r\n    rest = require('./restler');\r\n\r\nrest.get('http://google.com').on('complete', function(result) {\r\n  if (result instanceof Error) {\r\n    sys.puts('Error: ' + result.message);\r\n    this.retry(5000); // try again after 5 sec\r\n  } else {\r\n    sys.puts(result);\r\n  }\r\n});\r\n\r\nrest.get('http://twaud.io/api/v1/users/danwrong.json').on('complete', function(data) {\r\n  sys.puts(data[0].message); // auto convert to object\r\n});\r\n\r\nrest.get('http://twaud.io/api/v1/users/danwrong.xml').on('complete', function(data) {\r\n  sys.puts(data[0].sounds[0].sound[0].message); // auto convert to object\r\n});\r\n\r\nrest.post('http://user:pass@service.com/action', {\r\n  data: { id: 334 },\r\n}).on('complete', function(data, response) {\r\n  if (response.statusCode == 201"],[0,") {\r\n  "],[1," "],[1," "],[0,"// "],[-1,"Every request gets the same \"Hello Connect\" response.\r\n "],[1,"you can get at the raw response like this...\r\n  }\r\n});\r\n\r\n// multipart request sending a file and using https\r\nrest.post('https://twaud.io/api/v1/upload.json', {\r\n  multipart: true,\r\n  username: 'danwrong',\r\n  password: 'wouldntyouliketoknow',\r\n  data: {\r\n    'sound[message]': 'hello from restler!',\r\n    'sound[file]': rest.file('doug-e-fresh_the-show.mp3', null, null, null, 'audio/mpeg')\r\n  }\r\n}).on('complete', function(data) {\r\n  sys.puts(data.audio_url);\r\n});\r\n\r\n// create a service constructor for very easy API wrappers a la HTTParty...\r\nTwitter ="],[0," res"],[1,"t"],[0,".s"],[-1,"impleBody(200, \"Hello Connect\");\r\n}).listen(process.env.PORT);"],[1,"ervice(function(u, p) {\r\n  this.defaults.username = u;\r\n  this.defaults.password = p;\r\n}, {\r\n  baseURL: 'http://twitter.com'\r\n}, {\r\n  update: function(message) {\r\n    return this.post('/statuses/update.json', { data: { status: message } });\r\n  }\r\n});\r\n\r\nvar client = new Twitter('danwrong', 'password');\r\nclient.update('Tweeting using a Restler service thingy').on('complete', function(data) {\r\n  sys.p(data);\r\n});\r\n\r\n// post JSON\r\nvar jsonData = { id: 334 };\r\nrest.postJson('http://example.com/action', jsonData).on('complete', function(data, response) {\r\n  // handle response\r\n});\r\n"]],"start1":0,"start2":0,"length1":217,"length2":1932}]],"length":1932,"saved":false}
{"ts":1360220356448,"patch":[[{"diffs":[[0,"re('"],[-1,"./"],[0,"rest"]],"start1":44,"start2":44,"length1":10,"length2":8}]],"length":1930,"saved":false}
{"ts":1360220692669,"patch":[[{"diffs":[[-1,"var sys = require('util'),\r\n    rest = require('restler');\r\n\r\nrest.get('http://google.com').on('complete', function(result) {\r\n  if (result instanceof Error) {\r\n    sys.puts('Error: ' + result.message);\r\n    this.retry(5000); // try again after 5 sec\r\n  } else {\r\n    sys.puts(result);\r\n  }\r\n});\r\n\r\nrest.get('http://twaud.io/api/v1/users/danwrong.json').on('complete', function(data) {\r\n  sys.puts(data[0].message); // auto convert to object\r\n});\r\n\r\nrest.get('http://twaud.io/api/v1/users/danwrong.xml').on('complete', function(data) {\r\n  sys.puts(data[0].sounds[0].sound[0].message); // auto convert to object\r\n});\r\n\r\nrest.post('http://user:pass@service.com/action', {\r\n  data: { id: 334 },\r\n}).on('complete', function(data, response) {\r\n  if (response.statusCode == 201) {"],[1,"﻿<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\r\n<script language=\"Javascript\" type=\"text/javascript\">\r\nvar obj = {\r\n    apikey: \"{발급 받은 키를 입력하세요.}\",\r\n\tinit : function()\r\n\t{\r\n\t\tobj.q = document.getElementById('q');\r\n\t\tobj.b = document.getElementById('b');\r\n\t\tobj.r = document.getElementById('r');\r\n\t\tobj.b.onclick = obj.pingSearch;\r\n\t},\r\n\t// 검색을 요청하는 함수 \r\n \tpingSearch : function()\r\n \t{\r\n\t    if (obj.q.value)\r\n\t    {\r\n\t      obj.s = document.createElement('script');\r\n\t      obj.s.type ='text/javascript';\r\n\t      obj.s.charset ='utf-8';\r\n\t      obj.s.src = 'http://apis.daum.net/search/blog?apikey=' + obj.apikey + '&output=json&callback=obj.pongSearch&q=' + encodeURI(obj.q.value);"],[0,"\r\n"],[1,"\t"],[0,"    "],[-1,"// you can get at the raw response like this...\r\n  }\r\n});\r\n\r\n// multipart request sending a file and using https\r\nrest.post('https://twaud.io/api/v1/upload.json', {\r\n  multipart: true,\r\n  username: 'danwrong',\r\n  password: 'wouldntyouliketoknow',\r\n  data: {\r\n    'sound[message]': 'hello from restler!',\r\n    'sound[file]': rest.file('doug-e-fresh_the-show.mp3', null, null, null, 'audio/mpeg"],[1,"  document.getElementsByTagName('head')[0].appendChild(obj.s);\r\n\t    }\r\n \t},\r\n \t// 검색 결과를 뿌리는 함수 \r\n\tpongSearch : function(z)\r\n\t{\r\n\t\tobj.r.innerHTML = '';\r\n\t\tfor (var i = 0; i < z.channel.item.length; i++)\r\n\t\t{\r\n\t\t\tvar li = document.createElement('li');\r\n\t\t\tvar a = document.createElement('a');\r\n\t\t\tvar p = document.createElement('p"],[0,"')"],[1,";"],[0,"\r\n"],[-1,"  }\r\n}).on('complete', function(data) {\r\n  sys.puts(data.audio_url);\r\n});\r\n\r\n// create a service constructor for very easy API wrappers a la HTTParty...\r\nTwitter = rest.service(function(u, p) {\r\n  this.defaults.username = u;\r\n  this.defaults.password = p;\r\n}, {\r\n  baseURL: 'http://twitter.com'"],[1,"\t\t\ta.href = z.channel.item[i].link;\r\n\t\t\ta.innerHTML = obj.escapeHtml(z.channel.item[i].title);\r\n\t\t\tp.innerHTML =  obj.escapeHtml(z.channel.item[i].description);\r\n\t\t\t\r\n\t\t\tli.appendChild(a);\r\n\t\t\tli.appendChild(p);\r\n\t\t\tobj.r.appendChild(li);\r\n\t\t}"],[0,"\r\n"],[1,"\t"],[0,"},"],[-1," {\r\n  update: function(message) {\r\n    return this.post('/statuses/update.json', { data: { status: message } });\r\n  }\r\n});\r\n\r\nvar client = new Twitter('danwrong', 'password');\r\nclient.update('Tweeting using a Restler service thingy').on('complete', function(data) {\r\n  sys.p(data);\r\n});\r\n\r\n// post JSON\r\nvar jsonData = { id: 334 };\r\nrest.postJson('http://example.com/action', jsonData).on('complete', function(data, response) {\r\n  // handle response\r\n});"],[1,"\r\n\t// HTML태그 안 먹게 하는 함수\r\n\tescapeHtml : function(str) \r\n\t{\r\n\t\tstr = str.replace(/&amp;/g, \"&\");\r\n\t\tstr = str.replace(/&lt;/g, \"<\");\r\n\t\tstr = str.replace(/&gt;/g, \">\");\r\n\t\treturn str;\r\n\t}\r\n};\r\nwindow.onload = function()\r\n{\r\n  obj.init();\r\n  obj.pingSearch();\r\n};\r\n</script>\r\n</head>\r\n<body>\r\n\t<div id=\"divSearch\">\r\n\t\t블로그 검색 예제\r\n\t\t<input id=\"q\" type=\"text\"/>\r\n\t\t<input id=\"b\" type=\"submit\" value=\"검색\"/>\r\n\t</div>\r\n\r\n\t<div id=\"r\"></div>\r\n</body>\r\n</html>"],[0,"\r\n"]],"start1":0,"start2":0,"length1":1930,"length2":1924}]],"length":1924,"saved":false}
{"ts":1360220705561,"patch":[[{"diffs":[[-1,"﻿<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\r\n<script language=\"Javascript\" type=\"text/javascript\">\r\nvar obj = {\r\n    apikey: \"{발급 받은 키를 입력하세요.}\",\r\n\tinit : function()\r\n\t{\r\n\t\tobj.q = document.getElementById('q');\r\n\t\tobj.b = document.getElementById('b');\r\n\t\tobj.r = document.getElementById('r');\r\n\t\tobj.b.onclick = obj.pingSearch;\r\n\t},\r\n\t// 검색을 요청하는 함수 \r\n \tpingSearch : function()\r\n \t{\r\n\t    if (obj.q.value)\r\n\t    {\r\n\t      obj.s = document.createElement('script');\r\n\t      obj.s.type ='text/javascript';\r\n\t      obj.s.charset ='utf-8';\r\n\t      obj.s.src = 'http://apis.daum.net/search/blog?apikey=' + obj.apikey + '&output=json&callback=obj.pongSearch&q=' + encodeURI(obj.q.value);\r\n\t      document.getElementsByTagName('head')[0].appendChild(obj.s);\r\n\t    }\r\n \t},\r\n \t// 검색 결과를 뿌리는 함수 \r\n\tpongSearch : function(z)\r\n\t{\r\n\t\tobj.r.innerHTML = '';\r\n\t\tfor (var i = 0; i < z.channel.item.length; i++)\r\n\t\t{\r\n\t\t\tvar li = document.createElement('li');\r\n\t\t\tvar a = document.createElement('a');\r\n\t\t\tvar p = document.createElement('p');\r\n\t\t\ta.href = z.channel.item[i].link;\r\n\t\t\ta.innerHTML = obj.escapeHtml(z.channel.item[i].title);\r\n\t\t\tp.innerHTML =  obj.escapeHtml(z.channel.item[i].description);\r\n\t\t\t\r\n\t\t\tli.appendChild(a);\r\n\t\t\tli.appendChild(p);\r\n\t\t\tobj.r.appendChild(li);\r\n\t\t}\r\n\t},\r\n\t// HTML태그 안 먹게 하는 함수\r\n\tescapeHtml : function(str) \r\n\t{\r\n\t\tstr = str.replace(/&amp;/g, \"&\");\r\n\t\tstr = str.replace(/&lt;/g, \"<\");\r\n\t\tstr = str.replace(/&gt;/g, \">\");\r\n\t\treturn str;\r\n\t}\r\n};\r\nwindow.onload = function()\r\n{\r\n  obj.init();\r\n  obj.pingSearch();\r\n};\r\n</script>\r\n</head>\r\n<body>\r\n\t<div id=\"divSearch\">\r\n\t\t블로그 검색 예제\r\n\t\t<input id=\"q\" type=\"text\"/>\r\n\t\t<input id=\"b\" type=\"submit\" value=\"검색\"/>\r\n\t</div>\r\n\r\n\t<div id=\"r\"></div>\r\n</body>\r\n</html>\r\n"]],"start1":0,"start2":0,"length1":1924,"length2":0}]],"length":0,"saved":false}
{"ts":1360220873804,"patch":[[{"diffs":[[1,"var express = require('express');\r\nvar sys = require('sys');\r\nvar oauth = require('oauth');\r\n\r\nvar app = express.createServer();\r\n\r\nvar ConsumerKey = \"발급받으신 ConsumerKey를 입력하세요.\";\r\nvar ConsumerSecret = \"발급받으신 ConsumerSecret를 입력하세요.\";\r\nvar CallbackUrl = \"등록하신 CallbackUrl을 입력하세요.\";\r\n\r\nvar RequestTokenUrl = \"https://apis.daum.net/oauth/requestToken\";\r\nvar AuthorizeUrl = \"https://apis.daum.net/oauth/authorize\";\r\nvar AccessTokenUrl = \"https://apis.daum.net/oauth/accessToken\";\r\nvar ResourceUrl = \"https://apis.daum.net/calendar/event/index.json\";\r\n\r\n//ConsumerKey = \"ntXKmszjueD2jfaDytv07A\";\r\n//CunsoumerSecret = \"0j1Bs2yeeTTjITTB6OJpnvBMqptYsm0z054IEsIJ0I\";\r\n//RequestTokenUrl = \"https://api.twitter.com/oauth/request_token\";\r\n//AuthorizeUrl = \"https://api.twitter.com/oauth/authorize\";\r\n//AccessTokenUrl = \"https://api.twitter.com/oauth/access_token\";\r\n//ResourceUrl = \"\";\r\n\r\napp.configure('development', function(){\r\n        app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\r\n        app.use(express.logger());\r\n        app.use(express.cookieParser());\r\n        app.use(express.bodyParser());\r\n        app.use(express.session({ secret : 'test!@#'}));\r\n        });\r\n\r\napp.dynamicHelpers({\r\nsession: function(req, res){\r\nreturn req.session;\r\n}\r\n});\r\n\r\nfunction consumer() {\r\n    return new oauth.OAuth(\r\n            RequestTokenUrl, AccessTokenUrl, \r\n            ConsumerKey, ConsumerSecret, \"1.0\", CallbackUrl, \"HMAC-SHA1\");   \r\n}\r\n//RequestToken & Authorize\r\napp.get('/', function(req, res){\r\n        consumer().getOAuthRequestToken(function(error, oauthToken, oauthTokenSecret, results){\r\n            if (error) {\r\n            res.end(\"Error getting OAuth request token : \" + sys.inspect(error), 500);\r\n            } else {  \r\n            req.session.oauthRequestToken = oauthToken;\r\n            req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n            res.redirect(AuthorizeUrl+\"?oauth_token=\"+req.session.oauthRequestToken);      \r\n            }\r\n            });\r\n        });\r\n//callback(verify) & RequestAccessToken\r\napp.get('/callback', function(req, res){\r\n        consumer().getOAuthAccessToken(req.session.oauthRequestToken, req.session.oauthRequestTokenSecret, req.query.oauth_verifier, function(error, oauthAccessToken, oauthAccessTokenSecret, results) {\r\n            if (error) {\r\n                res.end(\"Error getting OAuth access token : \" + sys.inspect(error) + \"[\"+oauthAccessToken+\"]\"+ \"[\"+oauthAccessTokenSecret+\"]\"+ \"[\"+sys.inspect(results)+\"]\", 500);\r\n            } else {\r\n                req.session.oauthAccessToken = oauthAccessToken;\r\n                req.session.oauthAccessTokenSecret = oauthAccessTokenSecret;\r\n                res.redirect('/resource');\r\n                }\r\n            });\r\n   });\r\n//AccessProtectedResource\r\napp.get('/resource',function(req,res){\r\n    requestParameters = {'start_at':'2011-01-01','end_at':'2011-12-31'};\r\n    consumer().post(ResourceUrl, req.session.oauthAccessToken, req.session.oauthAccessTokenSecret, requestParameters, null, function (error, data, response) {\r\n        if (error) {\r\n            res.end(\"Error getting Daum callender event : \" + sys.inspect(error), 500);\r\n        } else {\r\n            //Convert string to json\r\n            var jsonData = eval('('+data+')');\r\n            var tempHTML = '';\r\n            \r\n            res.writeHead(200, {'Content-Type': 'text/html;charset=utf-8'});\r\n            if (jsonData.code == '500'){\r\n                res.end(data); \r\n            } else {\r\n                for (var i in jsonData){\r\n                    tempHTML += \"일정 제목 ->\" + jsonData[i].title + \"<br>\";\r\n                    tempHTML += \"일정 내용 ->\" + jsonData[i].description + \"<br>\";\r\n                    tempHTML += \"-----------------------<br>\";\r\n                }\r\n                res.end(tempHTML);\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\napp.listen(parseInt(process.env.PORT || 8002));\r\n"]],"start1":0,"start2":0,"length1":0,"length2":3906}]],"length":3906,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360221272708,"patch":[[{"diffs":[[-1,"var express = require('express');\r\nvar sys = require('sys');\r\nvar oauth = require('oauth');\r\n\r\nvar app = express.createServer();\r\n\r\nvar ConsumerKey = \"발급받으신 ConsumerKey를 입력하세요.\";\r\nvar ConsumerSecret = \"발급받으신 ConsumerSecret를 입력하세요.\";\r\nvar CallbackUrl = \"등록하신 CallbackUrl을 입력하세요.\";\r\n\r\nvar RequestTokenUrl = \""],[1,"/**\r\n * @projectDescription Jindo Json Extend\r\n * @copyright NHN corp. <"],[0,"http"],[-1,"s"],[0,"://"],[-1,"apis.daum.net/oauth/requestToken\";\r\nvar AuthorizeUrl = \"https://apis.daum.net/oauth/authorize\";\r\nvar AccessTokenUrl = \"https://apis.daum.net/oauth/accessToken\";\r\nvar ResourceUrl = \"https://apis.daum.net/calendar/event/index.json\";\r\n\r\n//ConsumerKey = \"ntXKmszjueD2jfaDytv07A\";\r\n//CunsoumerSecret = \"0j1Bs2yeeTTjITTB6OJpnvBMqptYsm0z054IEsIJ0I\";\r\n//RequestTokenUrl = \"https://api.twitter.com/oauth/request_token\";\r\n//AuthorizeUrl = \"https://api.twitter.com/oauth/authorize\";\r\n//AccessTokenUrl = \"https://api.twitter.com/oauth/access_token\";\r\n//ResourceUrl = \"\";\r\n\r\napp.configure('development', function(){\r\n        app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\r\n        app.use(express.logger());\r\n        app.use(express.cookieParser());\r\n        app.use(express.bodyParser());\r\n        app.use(express.session({ secret : 'test!@#'}));\r\n        });\r\n\r\napp.dynamicHelpers({\r\nsession: function(req, res){\r\nreturn req.session;\r\n}\r\n});\r\n\r\nfunction consumer() {\r\n    return new oauth.OAuth(\r\n            RequestTokenUrl, AccessTokenUrl, \r\n            ConsumerKey, ConsumerSecret, \"1.0\", CallbackUrl, \"HMAC-SHA1\");   "],[1,"www.nhncorp.com>\r\n * @author AjaxUI Team (gony)\r\n * @version 0.1\r\n * @since 0.2.9 <jindo.do.js>\r\n */\r\n\r\nvar JINDO = new Object();\r\nJINDO.xml2obj = function(xml) \r\n{\r\n    var obj = {}, que = [], depth = 0;\r\n\r\n\t// attribute를 해석하기 위한 함수\t\r\n\tvar parse_attr = function(oobj, str) {\r\n\t\tstr.replace(/([^=\\s]+)\\s*=\\s*\"([^\"]*)\"/g, function(a0,a1,a2) {\r\n\t\t\toobj[a1] = a2;\r\n\t\t});\r\n\t}\r\n\t\r\n\t// 주석, XML선언, 태그 사이 공백 등의 의미 없는 코드를 삭제\r\n\txml = xml.replace(/<(\\?|\\!-)[^>]*>/g,'').replace(/>\\s+</g, '><');\r\n\t\r\n\t// 하위 노드가 없는 태그는 하나의 닫힌 태그로 수정\r\n\txml = xml.replace(/<([^!][^ >]+)(\\s[^>]*)?><\\/\\1>/g, '<$1$2 />').replace(/^\\s+|\\s+$/g, '');"],[0,"\r\n"],[-1,"}"],[0,"\r\n"],[1,"\t"],[0,"//"],[-1,"RequestToken & Authorize\r\napp.get('/', function(req, res){\r\n        consumer().getOAuthRequestToken(function(error, oauthToken, oauthTokenSecret, results){\r\n            if (error) {\r\n            res.end(\"Error getting OAuth request token : \" + sys.inspect(error), 500);\r\n            } else {  \r\n            req.session.oauthRequestToken = oauthToken;\r\n            req.session.oauthRequestTokenSecret = oauthTokenSecret;\r\n            res.redirect(AuthorizeUrl+\"?oauth_token=\"+req.session.oauthRequestToken);      \r\n            }\r\n            });\r\n        });\r\n//callback(verify) & RequestAccessToken\r\napp.get('/callback', function(req, res){\r\n        consumer().getOAuthAccessToken(req.session.oauthRequestToken, req.session.oauthRequestTokenSecret, req.query.oauth_verifier, function(error, oauthAccessToken, oauthAccessTokenSecret, results) {\r\n            if (error) {\r\n                res.end(\"Error getting OAuth access token : \" + sys.inspect(error) + \"[\"+oauthAccessToken+\"]\"+ \"[\"+oauthAccessTokenSecret+\"]\"+ \"[\"+sys.inspect(results)+\"]\", 500);\r\n            } else {\r\n                req.session.oauthAccessToken = oauthAccessToken;\r\n                req.session.oauthAccessTokenSecret = oauthAccessTokenSecret;\r\n                res.redirect('/resource');\r\n                }\r\n            });\r\n   });\r\n//AccessProtectedResource\r\napp.get('/resource',function(req,res){\r\n    requestParameters = {'start_at':'2011-01-01','end_at':'2011-12-31'};\r\n    consumer().post(ResourceUrl, req.session.oauthAccessToken, req.session.oauthAccessTokenSecret, requestParameters, null, function (error, data, response) {\r\n        if (error) {\r\n            res.end(\"Error getting Daum callender event : \" + sys.inspect(error), 500);\r\n        } else {\r\n            //Convert string to json\r\n            var jsonData = eval('('+data+')');\r\n            var tempHTML = '';\r\n            \r\n            res.writeHead(200, {'Content-Type': 'text/html;charset=utf-8'});\r\n            if (jsonData.code == '500'){\r\n                res.end(data"],[1," 함수 객체를 정규 표현식 처리의 인자로 줘서 iterator로 사용\r\n\txml = xml.replace(/<\\/?([^\\!][^ >]*)(\\s[^>]*)?>(<\\/$1>|<\\!\\[CDATA\\[(?:(.|\\s)*?)\\]\\]>|[^<>]*)/g, function(a0,a1,a2,a3)\r\n\t{\r\n\t\t// IE에서 일치하는 내용이 없으면 undefined로 전달되므로\r\n\t\t// 빈 문자열로 변경해 다른 브라우저와의 호환성을 맞춤\r\n\t\tif (typeof a1 == 'undefined') a1 = '';\r\n\t\tif (typeof a2 == 'undefined') a2 = '';\r\n\t\tif (typeof a3 == 'undefined') a3 = '';\r\n\t\t\r\n\t\tif (a0.substr(1,1) == '/') { // 현재 태그가 닫는 태그라면,\r\n\t\t\t// 깊이를 1만큼 감소 \r\n\t\t\tdepth--;\r\n\t\t} else if (que.length == 0) { // 객체 큐에 객체가 없다면,\r\n\t\t\tque[depth] = obj; // 초기의 객체를 큐에 넣고\r\n\t\t\tparse_attr(obj, a2); // attribute를 해석\r\n\t\t} else {\r\n\t\t\tvar k  = a1, o = {}, is_closed = false;\r\n\t\t\t\r\n\t\t\tis_closed = (a2.substr(-1,1) == '/');\r\n\t\t\tif (a3.length > 0 || is_closed) { // 텍스트 노드가 있다면\r\n\t\t\t\to = a3; // 추가할 객체는 문자열 객체\r\n\t\t\t\t\r\n\t\t\t\t// CDATA라면 전달받은 그대로 리턴하고\r\n\t\t\t\t// 그렇지 않다면 decode 해서 리턴\r\n\t\t\t\tif (o.substr(0,9) == '<![CDATA[' && o.substr(-3,3) == ']]>') o = o.substring(9, o.length-3);\r\n\t\t\t\telse o = o.replace(/</g, '<').replace(/>/g, '>').replace(/&/g, '&');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 객체를 할당하기 전에 태그 이름이 이미 존재하는지 살펴보고\r\n\t\t\t// 이전에 존재하는 태그라면, 배열로 만든다. 이미 배열이라면 현재의 객체를 배열에 추가\r\n\t\t\tif (typeof que[depth][k] == 'undefined') {\r\n\t\t\t\tque[depth][k] = o;\r\n\t\t\t} else {\t\t\t\t\r\n\t\t\t\tvar v = que[depth][k];\r\n\t\t\t\tif (que[depth][k].constructor != Array) que[depth][k] = [v];\r\n\t\t\t\tque[depth][k].push(o"],[0,");"],[-1," "],[0,"\r\n"],[-1,"            } else {\r\n                for (var i in jsonData){\r\n                    tempHTML += \"일정 제목 ->\" + jsonData[i].title + \"<br>\";\r\n                    tempHTML += \"일정 내용 ->\" + jsonData[i].description + \"<br>\";\r\n                    tempHTML += \"-----------------------<br>\";\r\n                }\r\n                res.end(tempHTML);\r\n            }\r\n        }\r\n    })"],[1,"\t\t\t}\r\n\r\n\t\t\t// attribute를 해석\r\n\t\t\tparse_attr(o, a2);\r\n\t\t\t\r\n\t\t\tif (!is_closed) que[++depth] = o;\t\r\n\t\t}\r\n\t\t\r\n\t\treturn ''"],[0,";\r\n"],[1,"\t"],[0,"});\r\n"],[1,"\t"],[0,"\r\n"],[-1,"app.listen(parseInt(process.env.PORT || 8002))"],[1,"\treturn obj"],[0,";\r\n"],[1,"}"]],"start1":0,"start2":0,"length1":3906,"length2":2167}]],"length":2167,"saved":false}
{"ts":1360221412234,"patch":[[{"diffs":[[-1,"/**\r\n * @projectDescription Jindo Json Extend\r\n * @copyright NHN corp. <http://www.nhncorp.com>\r\n * @author AjaxUI Team (gony)\r\n * @version 0.1\r\n * @since 0.2.9 <jindo.do.js>\r\n */\r\n\r\nvar JINDO = new Object();\r\nJINDO.xml2obj = function(xml) \r\n{\r\n    var obj = {}, que = [], depth = 0;\r\n\r\n\t// attribute를 해석하기 위한 함수\t\r\n\tvar parse_attr = function(oobj, str) {\r\n\t\tstr.replace(/([^=\\s]+)\\s*=\\s*\"([^\"]*)\"/g, function(a0,a1,a2) {\r\n\t\t\toobj[a1] = a2;\r\n\t\t});\r\n\t}\r\n\t\r\n\t// 주석, XML선언, 태그 사이 공백 등의 의미 없는 코드를 삭제\r\n\txml = xml.replace(/<(\\?|\\!-)[^>]*>/g,'').replace(/>\\s+</g, '><');\r\n\t\r\n\t// 하위 노드가 없는 태그는 하나의 닫힌 태그로 수정\r\n\txml = xml.replace(/<([^!][^ >]+)(\\s[^>]*)?><\\/\\1>/g, '<$1$2 />').replace(/^\\s+|\\s+$/g, ''"],[1,"net = require('net'); \r\nvar sockets = []; \r\n\r\nvar s = net.Server(function(socket) { \r\nsockets.push(socket"],[0,");"],[1," "],[0,"\r\n\r\n"],[-1,"\t// 함수 객체를 정규 표현식 처리의 인자로 줘서 iterator로 사용\r\n\txml = xml.replace(/<\\/?([^\\!][^ >]*)(\\s[^>]*)?>(<\\/$1>|<\\!\\[CDATA\\[(?:(.|\\s)*?)\\]\\]>|[^<>]*)/g, function(a0,a1,a2,a3)\r\n\t{\r\n\t\t// IE에서 일치하는 내용이 없으면 undefined로 전달되므로\r\n\t\t// 빈 문자열로 변경해 다른 브라우저와의 호환성을 맞춤\r\n\t\tif (typeof a1 == 'undefined') a1 = '';\r\n\t\tif (typeof a2 == 'undefined') a2 = '';\r\n\t\tif (typeof a3 == 'undefined') a3 = '';\r\n\t\t\r\n\t\tif (a0.substr(1,1) == '/') { // 현재 태그가 닫는 태그라면,\r\n\t\t\t// 깊이를 1만큼 감소 \r\n\t\t\tdepth--;\r\n\t\t} else if (que.length == 0) { // 객체 큐에 객체가 없다면,\r\n\t\t\tque[depth] = obj; // 초기의 객체를 큐에 넣고\r\n\t\t\tparse_attr(obj, a2); // attribute를 해석\r\n\t\t} else {\r\n\t\t\tvar k  = a1, o = {}, is_closed = false;\r\n\t\t\t\r\n\t\t\tis_closed = (a2.substr(-1,1) == '/');\r\n\t\t\tif (a3.length > 0 || is_closed) { // 텍스트 노드가 있다면\r\n\t\t\t\to = a3; // 추가할 객체는 문자열 객체\r\n\t\t\t\t\r\n\t\t\t\t// CDATA라면 전달받은 그대로 리턴하고\r\n\t\t\t\t// 그렇지 않다면 decode 해서 리턴\r\n\t\t\t\tif (o.substr(0,9) == '<![CDATA[' && o.substr(-3,3) == ']]>') o = o.substring(9, o.length-3"],[1,"socket.on('data', function(d) { \r\nfor (var i = 0; i < sockets.length; i++) { \r\nsockets[i].write(d); \r\n} \r\n}); \r\nsocket.on('end', function() { \r\nvar i = sockets.indexOf(socket"],[0,");"],[1," "],[0,"\r\n"],[-1,"\t\t\t\telse o = o.replace(/</g, '<').replace(/>/g, '>').replace(/&/g, '&');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 객체를 할당하기 전에 태그 이름이 이미 존재하는지 살펴보고\r\n\t\t\t// 이전에 존재하는 태그라면, 배열로 만든다. 이미 배열이라면 현재의 객체를 배열에 추가\r\n\t\t\tif (typeof que[depth][k] == 'undefined') {\r\n\t\t\t\tque[depth][k] = o;\r\n\t\t\t} else {\t\t\t\t\r\n\t\t\t\tvar v = que[depth][k];\r\n\t\t\t\tif (que[depth][k].constructor != Array) que[depth][k] = [v];\r\n\t\t\t\tque[depth][k].push(o);\r\n\t\t\t}\r\n\r\n\t\t\t// attribute를 해석\r\n\t\t\tparse_attr(o, a2);\r\n\t\t\t\r\n\t\t\tif (!is_closed) que[++depth] = o;\t\r\n\t\t}\r\n\t\t\r\n\t\treturn '';\r\n\t});\r\n\t\r\n\treturn obj;\r\n}"],[1,"sockets.splice(i, 1); \r\n}); \r\n}); \r\n\r\ns.listen(process.env.PORT); "]],"start1":0,"start2":0,"length1":2167,"length2":357}]],"length":357,"saved":false}
{"ts":1360222014079,"patch":[[{"diffs":[[-1,"net = require('net'); \r\nvar sockets = []; \r\n\r\nvar s = net.Server(function(socket) { \r\nsockets.push(socket); \r\n\r\nsocket.on('data', function(d) { \r\nfor (var i = 0; i < sockets.length; i++) { \r\nsockets[i].write(d); \r\n} \r\n}); \r\nsocket.on('end', function() { \r\nvar i = sockets.indexOf(socket); \r\nsockets.splice(i, 1); \r\n}); \r\n}); \r\n\r\ns.listen(process.env.PORT); "],[1,"var test_module = require('./webserver');\n\ntest_module.start();"]],"start1":0,"start2":0,"length1":357,"length2":63}]],"length":63,"saved":false}
{"ts":1360222080444,"patch":[[{"diffs":[[0,"le.start"],[1,"1"],[0,"();"]],"start1":52,"start2":52,"length1":11,"length2":12}]],"length":64,"saved":false}
{"ts":1360222090580,"patch":[[{"diffs":[[0,"ebserver"],[1,".js"],[0,"');\n\ntes"]],"start1":30,"start2":30,"length1":16,"length2":19}]],"length":67,"saved":false}
{"ts":1360222100087,"patch":[[{"diffs":[[0,"re('"],[-1,"./"],[0,"webs"]],"start1":23,"start2":23,"length1":10,"length2":8}]],"length":65,"saved":false}
{"ts":1360222112305,"patch":[[{"diffs":[[0,"equire('"],[1,"./"],[0,"webserve"]],"start1":19,"start2":19,"length1":16,"length2":18}]],"length":67,"saved":false}
{"ts":1360222182201,"patch":[[{"diffs":[[0,"('./"],[-1,"webserver"],[1,"module"],[0,".js'"]],"start1":25,"start2":25,"length1":17,"length2":14}]],"length":64,"saved":false}
{"ts":1360222199630,"patch":[[{"diffs":[[0,"ule."],[-1,"start1"],[1,"hello"],[0,"();"]],"start1":51,"start2":51,"length1":13,"length2":12}]],"length":63,"saved":false}
{"ts":1360222540058,"patch":[[{"diffs":[[-1,"var test_module = require('./module.js');\n\ntest_module.hello();"],[1,"// EventEmitter 객체 생성\r\nvar test_event = new process.EventEmitter();\r\n\r\n// 이벤트 연결 \r\ntest_event.on('hello', function() {\r\n console.log('hello world');\r\n});\r\n\r\n// 이벤트 연결 \r\ntest_event.on('hello1', function() {\r\n console.log('hello1 world1');\r\n});\r\n\r\n\r\n// 이벤트를 강제로 발생 \r\ntest_event.emit('hello');\r\ntest_event.emit('hello1');\r\n"]],"start1":0,"start2":0,"length1":63,"length2":320}]],"length":320,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360223444390,"patch":[[{"diffs":[[-1,"// EventEmitter 객체 생성\r\nvar test_event = new process.EventEmitter("],[1,"var http = require('http');\r\nvar fs = require('fs');\r\nvar socketio = require('socket.io'"],[0,");\r\n"],[1," "],[0,"\r\n// "],[-1,"이벤트 연결 \r\ntest_event.on('hello', function() {\r\n console.log('hello world');\r\n});\r\n\r\n// 이벤트 연결 \r\ntest_even"],[1,"웹 서버 생성 \r\nvar server = http.createServer(function (request, response) {\r\n \r\n // index.html 파일 읽음.\r\n fs.readFile('index.html', function (error, data) {\r\n  response.writeHead(200, {'Content-Type': 'text/html' });\r\n  response.end(data);\r\n });\r\n}).listen(3303);\r\n \r\nvar io = socketio.listen(server);\r\n \r\n// 클라이언트 접속 처리 \r\nio.sockets.on('connection', function (socket) {\r\n \r\n // 클라이언트가 보낸 Send 이벤트 처리 \r\n socke"],[0,"t.on('"],[-1,"hello"],[1,"Event"],[0,"1', "]],"start1":0,"start2":0,"length1":193,"length2":516},{"diffs":[[0,"unction("],[1,"data"],[0,") {\r\n"],[1," "],[0," console"]],"start1":517,"start2":517,"length1":21,"length2":26},{"diffs":[[0,"og('"],[-1,"hello1 world1');\r\n});\r\n\r\n\r\n// 이벤트를 강제로 발생 \r\ntest_event.emit('hello');\r\ntest_event.emit('hello1');"],[1,"Client Send Data:', data);\r\n  socket.emit('Event2', data);\r\n });\r\n});\r\n"],[0,"\r\n"]],"start1":545,"start2":545,"length1":103,"length2":77}]],"length":622,"saved":false}
{"ts":1360223451341,"patch":[[{"diffs":[[0,"ten("],[-1,"3303"],[1,"process.env.PORT"],[0,");\r\n"]],"start1":345,"start2":345,"length1":12,"length2":24}]],"length":634,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361427061312,"patch":[[{"diffs":[[0,"(socket) {\r\n"],[-1," \r\n"],[0," // 클라이언트가 보"]],"start1":464,"start2":464,"length1":27,"length2":24}]],"length":631,"saved":false}
