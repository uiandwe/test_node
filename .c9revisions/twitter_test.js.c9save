{"ts":1361341420238,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361342890918,"patch":[[{"diffs":[[1,"var config = require('./config').config,\r\n    OAuth = require('oauth').OAuth,\r\n\tread = require('read');\r\n\r\n// Service Provider와 통신할 인터페이스를 갖고 있는 객체 생성.\r\nvar oauth = new OAuth(config.requestTokenUrl, config.accessTokenUrl,\r\n\tconfig.consumerKey, config.consumerSecret,\r\n\t\"1.0\", config.callbackUrl, \"HMAC-SHA1\");\r\n\r\n// 2. Request Token 요청\r\noauth.getOAuthRequestToken(function(err, requestToken, requestTokenSecret, results) {\r\n\tif (err) {\r\n\t\tconsole.log(err);\r\n\t} else {\r\n\r\n\t\t// 3. 사용자 인증(Authentication) 및 권한 위임(Authorization)\r\n\t\tconsole.log(config.authorizeUrl + \"?oauth_token=\" + requestToken);\r\n\t\tconsole.log(\"웹브라우저에서 위 URL로 가서 인증코드를 얻고 입력하세요.\");\r\n\r\n\t\t// 4. verifier 입력 받기\r\n\t\tread({prompt: \"verifier: \"}, function(err, verifier) {\r\n\t\t\tif(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// 5. Request Token을 AccessToken 으로 교환\r\n\t\t\t\toauth.getOAuthAccessToken(requestToken, requestTokenSecret, verifier, function(err, accessToken, accessTokenSecret, result) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.log(\"Access Token = \" + accessToken);\r\n\t\t\t\t\t\tconsole.log(\"Access Token Secret = \" + accessTokenSecret);\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t// 6. 보호된 자원에 접근\r\n\t\t\t\t\t\tvar resourceUrl = config.apiUrl + \"/calendar/category/index.json\";\r\n\t\t\t\t\t\toauth.get(resourceUrl, accessToken, accessTokenSecret, function(err, data, res) {\r\n\t\t\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcategories = eval(data);\r\n\r\n\t\t\t\t\t\t\t\tfor(var i = 0; i < categories.length; i++) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(categories[i].name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1612}]],"length":1612,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361867150982,"patch":[[{"diffs":[[0,"var "],[-1,"config"],[1,"request"],[0," = requi"]],"start1":0,"start2":0,"length1":18,"length2":19},{"diffs":[[0,"re('"],[-1,"./config').config,\r\n    OAuth = require('oauth').OAuth,\r\n\tread"],[1,"request')\r\n    , JSONStream = require('JSONStream')\r\n    , es"],[0," = r"]],"start1":19,"start2":19,"length1":70,"length2":69},{"diffs":[[0,"re('"],[1,"event-st"],[0,"rea"],[-1,"d"],[1,"m"],[0,"')"],[-1,";"],[0,"\r\n"],[-1,"\r\n// Service Provider와 통신할 인터페이스를 갖고 있는 객체 생성.\r\nvar oauth = new OAuth(config.requestTokenUrl, config.accessTokenUrl,\r\n\tconfig.consumerKey, config.consumerSecret,\r\n\t\"1.0\", config.callbackUrl, \"HMAC-SHA1\");\r\n\r\n// 2. Request Token 요청\r\noauth.getOAuthRequestToken(function(err, requestToken, requestTokenSecret, results) {\r\n\tif (err) {\r\n\t\tconsole.log(err);\r\n\t} else {"],[1,"    , async = require('async')\r\n    , cluster = require('cluster')\r\n    , numCPUs = require('os').cpus().length\r\n    , socketio = require('socket.io')\r\n    , express = require('express');\r\n\r\nif (cluster.isMaster) {\r\n    // Fork workers.\r\n    for (var i = 0; i < numCPUs; i++) {\r\n        cluster.fork();\r\n    }"],[0,"\r\n"],[1," "],[0,"\r\n"],[-1,"\t\t// 3. 사용자 인증(Authentication) 및 권한 위임(Authorization)\r\n\t\tconsole.log(config.authorizeUrl + \"?oauth_token=\" + requestToken);\r\n\t\tconsole.log(\"웹브라우저에서 위 URL로 가서 인증코드를 얻고 입력하세요.\");\r\n\r\n\t\t// 4. verifier 입력 받기\r\n\t\tread({prompt: \"verifier: \"}, functio"],[1,"    cluster.on('death', function(worker) {\r\n        console.log('worker ' + worker.pid + ' died');\r\n    });\r\n} else {\r\n    console.log(\"worker: %s\", process.env.NODE_WORKER_ID);\r\n \r\n    var app = express();\r\n    var server = require('http').createServer(app);\r\n    var io = socketio.liste"],[0,"n("],[1,"s"],[0,"er"],[-1,"r, verifier) {\r\n\t\t\tif(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// 5. Request Token을 AccessToken 으로 교환\r\n\t\t\t\toauth.getOAuthAccessToken(requestToken, requestTokenSecret, verifier, function(err, accessToken, accessTokenSecret, result) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.log(\"Access Token = \" + accessToken);\r\n\t\t\t\t\t\tconsole.log(\"Access Token Secret = \" + accessTokenSecret);\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t// 6. 보호된 자원에 접근\r\n\t\t\t\t\t\tvar resourceUrl = config.apiUrl + \"/calendar/category/index.json\";\r\n\t\t\t\t\t\toauth.get(resourceUrl, accessToken, accessTokenSecret, function(err, data, res) {\r\n\t\t\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcategories = eval(data);\r\n\r\n\t\t\t\t\t\t\t\tfor(var i = 0; i < categories.length; i++) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(categories[i].name"],[1,"ver);\r\n    \r\n    app.get('/', function(req, res){\r\n        console.log(\"WORKED!! %s\", process.env.NODE_WORKER_ID);\r\n        res.sendfile(__dirname+'/index.html');\r\n    });\r\n \r\n   \r\n    console.log('Server Running~!');\r\n\r\n        \r\n    function thread1() { \r\n        var result  = Array();\r\n            \r\n        var parser = JSONStream.parse(['results', true])\r\n                     .on('error', function(err) { console.log(err); })\r\n          , req = request({url: 'http://search.twitter.com/search.json?geocode=37.335887,126.584063,125km'})\r\n          , logger = es.mapSync(function (data) {\r\n                //console.log(data.iso_language_code);\r\n                result.push(data.text);\r\n             \r\n        }).on('error', function(err) { console.log(err); });\r\n        \r\n        \r\n        async.parallel([\r\n          function(callback) {\r\n            setTimeout(function() {\r\n              req.pipe(parser).pipe(logger);\r\n              callback(null, 'one');   \r\n            }, 10);\r\n          },\r\n        \r\n           \r\n          function(callback) {          \r\n            setTimeout(function(){\r\n              callback(null, 'three');\r\n            }, 1000);\r\n          },\r\n        ],\r\n        \r\n        function(err, results) {\r\n            console.log('twitter count : '+result.length);\r\n            //io.sockets.on('connection', function (socket) {\r\n             //   console.log(\"return : \" + result.length);\r\n             // io.sockets.emit('message', 1"],[0,");"],[1," "],[0,"\r\n"],[-1,"\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}"],[1,"           // });\r\n        });\r\n    }\r\n    \r\n    var tid = setInterval( thread1,  5000);\r\n    \r\n    server.listen(process.env.PORT"],[0,");\r\n"],[-1,"\t"],[0,"}\r\n"],[-1,"});"],[0,"\r\n"]],"start1":92,"start2":92,"length1":1520,"length2":2239}]],"length":2331,"saved":false}
{"ts":1361867196830,"patch":[[{"diffs":[[0," : '+result."],[-1,"length"],[1,"text"],[0,");\r\n        "]],"start1":1997,"start2":1997,"length1":30,"length2":28}]],"length":2329,"saved":false}
{"ts":1361867214385,"patch":[[{"diffs":[[0,"'+result"],[1,"[1]"],[0,".text);\r"]],"start1":2000,"start2":2000,"length1":16,"length2":19}]],"length":2332,"saved":false}
{"ts":1361867260302,"patch":[[{"diffs":[[0,";\r\n             "],[1,"    console.log('data.text' + data.text);"],[0,"\r\n        }).on("]],"start1":1408,"start2":1408,"length1":32,"length2":73},{"diffs":[[0,") {\r\n           "],[1,"//"],[0," console.log('tw"]],"start1":1995,"start2":1995,"length1":32,"length2":34}]],"length":2375,"saved":false}
{"ts":1361867320593,"patch":[[{"diffs":[[0,"063,"],[-1,"12"],[0,"5"],[1,"0"],[0,"km'}"]],"start1":1249,"start2":1249,"length1":11,"length2":10}]],"length":2374,"saved":false}
{"ts":1361867453782,"patch":[[{"diffs":[[0,"read1,  "],[-1,"5"],[1,"2"],[0,"000);\r\n "]],"start1":2309,"start2":2309,"length1":17,"length2":17}]],"length":2374,"saved":false}
{"ts":1361867788649,"patch":[[{"diffs":[[0,"    "],[-1," console.log('data.text' + data.text);"],[0,"\r\n  "]],"start1":1422,"start2":1422,"length1":46,"length2":8}]],"length":2336,"saved":false}
{"ts":1361867805302,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[1," console.log('twitter count : '+result.length);\r\n           "],[0," console"]],"start1":1964,"start2":1964,"length1":18,"length2":76}]],"length":2394,"saved":false}
{"ts":1361867833276,"patch":[[{"diffs":[[0,"sult"],[-1,"[1]"],[0,".text"],[1,"[1]"],[0,");\r\n"]],"start1":2066,"start2":2066,"length1":16,"length2":16}]],"length":2394,"saved":false}
{"ts":1361867867361,"patch":[[{"diffs":[[0,"'+result"],[-1,".text"],[0,"[1]);\r\n "]],"start1":2062,"start2":2062,"length1":21,"length2":16}]],"length":2389,"saved":false}
{"ts":1361867978605,"patch":[[{"diffs":[[0," {\r\n            "],[1,"//"],[0,"console.log('twi"]],"start1":1957,"start2":1957,"length1":32,"length2":34}]],"length":2391,"saved":false}
{"ts":1361868026338,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"        \r\n    function thread1() { \r\n   "],[0,"    "]],"start1":936,"start2":936,"length1":48,"length2":8},{"diffs":[[0,"ray();\r\n"],[-1,"            \r\n    "],[0,"    var "]],"start1":961,"start2":961,"length1":34,"length2":16},{"diffs":[[0," });\r\n        \r\n"],[1,"    function thread1() { \r\n"],[0,"        \r\n      "]],"start1":1426,"start2":1426,"length1":32,"length2":59}]],"length":2360,"saved":false}
{"ts":1361868053728,"patch":[[{"diffs":[[0," thread1"],[1,"()"],[0,",  2000)"]],"start1":2292,"start2":2292,"length1":16,"length2":18}]],"length":2362,"saved":false}
{"ts":1361868072458,"patch":[[{"diffs":[[0,"!');\r\n\r\n"],[1,"        \r\n    function thread1() { \r\n   "],[0,"     var"]],"start1":932,"start2":932,"length1":16,"length2":56},{"diffs":[[0,"= Array();\r\n"],[1,"            \r\n    "],[0,"    var pars"]],"start1":997,"start2":997,"length1":24,"length2":42},{"diffs":[[0,"  \r\n"],[-1,"    function thread1() { \r\n"],[0,"    "]],"start1":1496,"start2":1496,"length1":35,"length2":8},{"diffs":[[0," thread1"],[-1,"()"],[0,",  2000)"]],"start1":2323,"start2":2323,"length1":18,"length2":16}]],"length":2391,"saved":false}
{"ts":1361868123864,"patch":[[{"diffs":[[0,"n thread"],[-1,"1"],[0,"() { \r\n "]],"start1":961,"start2":961,"length1":17,"length2":16},{"diffs":[[0,"read"],[-1,"1"],[0,",  "],[-1,"2"],[1,"10"],[0,"000)"]],"start1":2325,"start2":2325,"length1":13,"length2":13}]],"length":2390,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361931168536,"patch":[[{"diffs":[[0,");\r\n            "],[1,"//"],[0,"console.log('twi"]],"start1":2018,"start2":2018,"length1":32,"length2":34}]],"length":2392,"saved":false}
{"ts":1361931183287,"patch":[[{"diffs":[[0," {\r\n            "],[-1,"//"],[0,"console.log('twi"]],"start1":1956,"start2":1956,"length1":34,"length2":32}]],"length":2390,"saved":false}
