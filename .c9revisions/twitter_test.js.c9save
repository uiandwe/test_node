{"ts":1361341420238,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361342890918,"patch":[[{"diffs":[[1,"var config = require('./config').config,\r\n    OAuth = require('oauth').OAuth,\r\n\tread = require('read');\r\n\r\n// Service Provider와 통신할 인터페이스를 갖고 있는 객체 생성.\r\nvar oauth = new OAuth(config.requestTokenUrl, config.accessTokenUrl,\r\n\tconfig.consumerKey, config.consumerSecret,\r\n\t\"1.0\", config.callbackUrl, \"HMAC-SHA1\");\r\n\r\n// 2. Request Token 요청\r\noauth.getOAuthRequestToken(function(err, requestToken, requestTokenSecret, results) {\r\n\tif (err) {\r\n\t\tconsole.log(err);\r\n\t} else {\r\n\r\n\t\t// 3. 사용자 인증(Authentication) 및 권한 위임(Authorization)\r\n\t\tconsole.log(config.authorizeUrl + \"?oauth_token=\" + requestToken);\r\n\t\tconsole.log(\"웹브라우저에서 위 URL로 가서 인증코드를 얻고 입력하세요.\");\r\n\r\n\t\t// 4. verifier 입력 받기\r\n\t\tread({prompt: \"verifier: \"}, function(err, verifier) {\r\n\t\t\tif(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// 5. Request Token을 AccessToken 으로 교환\r\n\t\t\t\toauth.getOAuthAccessToken(requestToken, requestTokenSecret, verifier, function(err, accessToken, accessTokenSecret, result) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.log(\"Access Token = \" + accessToken);\r\n\t\t\t\t\t\tconsole.log(\"Access Token Secret = \" + accessTokenSecret);\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t// 6. 보호된 자원에 접근\r\n\t\t\t\t\t\tvar resourceUrl = config.apiUrl + \"/calendar/category/index.json\";\r\n\t\t\t\t\t\toauth.get(resourceUrl, accessToken, accessTokenSecret, function(err, data, res) {\r\n\t\t\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcategories = eval(data);\r\n\r\n\t\t\t\t\t\t\t\tfor(var i = 0; i < categories.length; i++) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(categories[i].name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1612}]],"length":1612,"saved":false}
